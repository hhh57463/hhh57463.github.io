<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><generator uri="https://jekyllrb.com/" version="3.9.2">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" hreflang="en" /><updated>2023-01-08T23:02:32+09:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">Mindol</title><subtitle>Mindol&apos;s Blog</subtitle><author><name>Mindol</name></author><entry><title type="html">Dart 기초 - 함수</title><link href="http://localhost:4000/dart/2023/01/08/Dart-%EA%B8%B0%EC%B4%88-%ED%95%A8%EC%88%98.html" rel="alternate" type="text/html" title="Dart 기초 - 함수" /><published>2023-01-08T06:00:01+09:00</published><updated>2023-01-08T06:00:01+09:00</updated><id>http://localhost:4000/dart/2023/01/08/Dart%20%EA%B8%B0%EC%B4%88-%ED%95%A8%EC%88%98</id><content type="html" xml:base="http://localhost:4000/dart/2023/01/08/Dart-%EA%B8%B0%EC%B4%88-%ED%95%A8%EC%88%98.html"><![CDATA[<h1 id="tmi">TMI</h1>
<hr />
<p>Flutter를 공부하기 위한 Dart 공부</p>

<h1 id="함수">함수</h1>
<hr />
<p>dart의 시작은 main.dart&gt;main()에서 시작됨 (필수 요소)</p>

<p>dart의 출력문 print(’문자열’);</p>

<p>함수 선언은 다른 언어와 유사</p>

<div class="language-dart highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kt">String</span> <span class="nf">Hello</span><span class="p">({</span><span class="kt">String</span><span class="o">?</span> <span class="n">name</span><span class="p">,</span> <span class="kt">int</span><span class="o">?</span> <span class="n">age</span><span class="p">,</span> <span class="kt">String</span><span class="o">?</span> <span class="n">country</span><span class="p">})</span>
<span class="p">{</span>
  <span class="k">return</span> <span class="s">"Hello </span><span class="si">$name</span><span class="s"> you are </span><span class="si">$age</span><span class="s"> and from </span><span class="si">$country</span><span class="s">"</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>

<p>만약 코드가 한줄 이면</p>

<div class="language-dart highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kt">String</span> <span class="nf">Hello</span><span class="p">({</span><span class="kt">String</span><span class="o">?</span> <span class="n">name</span><span class="p">,</span> <span class="kt">int</span><span class="o">?</span> <span class="n">age</span><span class="p">,</span> <span class="kt">String</span><span class="o">?</span> <span class="n">country</span><span class="p">})</span> <span class="o">=</span><span class="p">&gt;</span> 
<span class="s">"Hello </span><span class="si">$name</span><span class="s"> you are </span><span class="si">$age</span><span class="s"> and from </span><span class="si">$country</span><span class="s">"</span><span class="p">;</span>
</code></pre></div></div>

<p>이렇게 줄일 수 있음</p>

<p>일반적으로 매개변수 있는 함수를 사용할 때는 Named Parameter를 사용하는 것을 지향(평소에 사용했던 매개변수 선언 순서에 맞는 호출 방법은 Positional parameter)</p>

<p>나중에 코드를 볼 때 이해가 쉽지 않기 때문에</p>

<p>특히 해당 함수가 같은 파일 내에 있지 않으면 어려움</p>

<p>Named Parameters : 함수 호출 시 매개변수 순서와 상관없이 변수에 지정해 주는 것 (함수 선언시 매개변수를 {}로 감싸야 함</p>

<div class="language-dart highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kt">String</span> <span class="nf">Hello</span><span class="p">({</span><span class="kt">String</span> <span class="n">name</span><span class="p">,</span> <span class="kt">int</span> <span class="n">age</span><span class="p">,</span> <span class="kt">String</span> <span class="n">country</span><span class="p">})</span> <span class="o">=</span><span class="p">&gt;</span> <span class="s">"Hello </span><span class="si">$name</span><span class="s"> you are </span><span class="si">$age</span><span class="s"> and from </span><span class="si">$country</span><span class="s">"</span><span class="p">;</span>

<span class="kt">void</span> <span class="nf">main</span><span class="p">()</span> <span class="p">{</span>
  <span class="n">print</span><span class="p">(</span><span class="n">Hello</span><span class="p">(</span><span class="nl">age:</span> <span class="mi">25</span><span class="p">,</span> <span class="nl">country:</span> <span class="s">"Korea"</span><span class="p">,</span> <span class="nl">name:</span> <span class="s">"Mindol"</span><span class="p">));</span>
<span class="p">}</span>
</code></pre></div></div>

<p>하지만 이렇게 하면 null safety 에러 발생</p>

<p>고치는 방법은 두가지</p>

<ol>
  <li>디폴트 매개변수로 지정</li>
  <li>required 키워드 사용 (null 값이 아니다 라는 것을 알려주는 키워드)</li>
  <li>null safety 사용 (자료형? 변수명)</li>
</ol>

<p>디폴트 매개변수로 지정</p>

<div class="language-dart highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kt">String</span> <span class="nf">Hello</span><span class="p">({</span><span class="kt">String</span> <span class="n">name</span> <span class="o">=</span> <span class="s">"who"</span><span class="p">,</span> <span class="kt">int</span> <span class="n">age</span> <span class="o">=</span> <span class="mi">10</span><span class="p">,</span> <span class="kt">String</span> <span class="n">country</span> <span class="o">=</span> <span class="s">"usa"</span><span class="p">})</span> <span class="o">=</span><span class="p">&gt;</span>
    <span class="s">"Hello </span><span class="si">$name</span><span class="s"> you are </span><span class="si">$age</span><span class="s"> and from </span><span class="si">$country</span><span class="s">"</span><span class="p">;</span>

<span class="kt">void</span> <span class="nf">main</span><span class="p">()</span> <span class="p">{</span>
  <span class="n">print</span><span class="p">(</span><span class="n">Hello</span><span class="p">());</span>
  <span class="n">print</span><span class="p">(</span><span class="n">Hello</span><span class="p">(</span><span class="nl">age:</span> <span class="mi">25</span><span class="p">,</span> <span class="nl">country:</span> <span class="s">"Korea"</span><span class="p">,</span> <span class="nl">name:</span> <span class="s">"Mindol"</span><span class="p">));</span>
<span class="p">}</span>

<span class="c1">// 결과</span>
<span class="n">Hello</span> <span class="n">who</span> <span class="n">you</span> <span class="n">are</span> <span class="mi">10</span> <span class="n">and</span> <span class="n">from</span> <span class="n">usa</span>
<span class="n">Hello</span> <span class="n">Mindol</span> <span class="n">you</span> <span class="n">are</span> <span class="mi">25</span> <span class="n">and</span> <span class="n">from</span> <span class="n">Korea</span>
<span class="n">Exited</span>
</code></pre></div></div>

<p>required 키워드 사용</p>

<div class="language-dart highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kt">String</span> <span class="nf">Hello</span><span class="p">(</span>
        <span class="p">{</span><span class="kd">required</span> <span class="kt">String</span> <span class="n">name</span><span class="p">,</span> <span class="kd">required</span> <span class="kt">int</span> <span class="n">age</span><span class="p">,</span> <span class="kd">required</span> <span class="kt">String</span> <span class="n">country</span><span class="p">})</span> <span class="o">=</span><span class="p">&gt;</span>
    <span class="s">"Hello </span><span class="si">$name</span><span class="s"> you are </span><span class="si">$age</span><span class="s"> and from </span><span class="si">$country</span><span class="s">"</span><span class="p">;</span>

<span class="kt">void</span> <span class="nf">main</span><span class="p">()</span> <span class="p">{</span>
  <span class="n">print</span><span class="p">(</span><span class="n">Hello</span><span class="p">(</span><span class="nl">age:</span> <span class="mi">25</span><span class="p">,</span> <span class="nl">country:</span> <span class="s">"Korea"</span><span class="p">,</span> <span class="nl">name:</span> <span class="s">"Mindol"</span><span class="p">));</span>
<span class="p">}</span>
</code></pre></div></div>

<p>null safety 사용</p>

<div class="language-dart highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kt">String</span> <span class="nf">Hello</span><span class="p">({</span><span class="kt">String</span><span class="o">?</span> <span class="n">name</span><span class="p">,</span> <span class="kt">int</span><span class="o">?</span> <span class="n">age</span><span class="p">,</span> <span class="kt">String</span><span class="o">?</span> <span class="n">country</span><span class="p">})</span> <span class="o">=</span><span class="p">&gt;</span> <span class="s">"Hello </span><span class="si">$name</span><span class="s"> you are </span><span class="si">$age</span><span class="s"> and from </span><span class="si">$country</span><span class="s">"</span><span class="p">;</span>

<span class="kt">void</span> <span class="nf">main</span><span class="p">()</span> <span class="p">{</span>
  <span class="n">print</span><span class="p">(</span><span class="n">Hello</span><span class="p">(</span><span class="nl">country:</span> <span class="s">"Korea"</span><span class="p">,</span> <span class="nl">name:</span> <span class="s">"Mindol"</span><span class="p">));</span>
<span class="p">}</span>
<span class="c1">// 결과</span>
<span class="n">Hello</span> <span class="n">Mindol</span> <span class="n">you</span> <span class="n">are</span> <span class="kc">null</span> <span class="n">and</span> <span class="n">from</span> <span class="n">Korea</span>
<span class="n">Exited</span>
</code></pre></div></div>

<p>Optional : named parameter를 적용하지 않고 특정 매개변수를 required하지 않게 하는 방법</p>

<div class="language-dart highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kt">String</span> <span class="nf">Hello</span><span class="p">(</span><span class="kt">String</span> <span class="n">name</span><span class="p">,</span> <span class="kt">int</span> <span class="n">age</span><span class="p">,</span> <span class="p">[</span><span class="kt">String</span><span class="o">?</span> <span class="n">country</span> <span class="o">=</span> <span class="s">'Korea'</span><span class="p">])</span> <span class="o">=</span><span class="p">&gt;</span>
    <span class="s">"Hello </span><span class="si">$name</span><span class="s"> you are </span><span class="si">$age</span><span class="s"> and from </span><span class="si">$country</span><span class="s">"</span><span class="p">;</span>

<span class="kt">void</span> <span class="nf">main</span><span class="p">()</span> <span class="p">{</span>
  <span class="n">print</span><span class="p">(</span><span class="n">Hello</span><span class="p">(</span><span class="s">"Mindol"</span><span class="p">,</span> <span class="mi">25</span><span class="p">));</span>
<span class="p">}</span>
</code></pre></div></div>

<p>삼항 연산자</p>

<div class="language-dart highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kt">String</span> <span class="nf">capitalizeName</span><span class="p">(</span><span class="kt">String</span><span class="o">?</span> <span class="n">name</span><span class="p">)</span> <span class="o">=</span><span class="p">&gt;</span>
    <span class="n">name</span> <span class="o">!=</span> <span class="kc">null</span> <span class="o">?</span> <span class="n">name</span><span class="o">.</span><span class="na">toUpperCase</span><span class="p">()</span> <span class="o">:</span> <span class="s">'NULL'</span><span class="p">;</span>
<span class="kt">void</span> <span class="nf">main</span><span class="p">()</span> <span class="p">{</span>
  <span class="n">print</span><span class="p">(</span><span class="n">capitalizeName</span><span class="p">(</span><span class="kc">null</span><span class="p">));</span>
  <span class="n">print</span><span class="p">(</span><span class="n">capitalizeName</span><span class="p">(</span><span class="s">"mindol"</span><span class="p">));</span>
<span class="p">}</span>
<span class="c1">// 결과</span>
<span class="n">NULL</span>
<span class="n">MINDOL</span>
<span class="n">Exited</span>

<span class="kt">String</span> <span class="nf">capitalizeName</span><span class="p">(</span><span class="kt">String</span><span class="o">?</span> <span class="n">name</span><span class="p">)</span> <span class="o">=</span><span class="p">&gt;</span> <span class="n">name</span><span class="o">?.</span><span class="na">toUpperCase</span><span class="p">()</span> <span class="o">??</span> <span class="s">'NULL'</span><span class="p">;</span>
<span class="kt">void</span> <span class="nf">main</span><span class="p">()</span> <span class="p">{</span>
  <span class="n">print</span><span class="p">(</span><span class="n">capitalizeName</span><span class="p">(</span><span class="kc">null</span><span class="p">));</span>
  <span class="n">print</span><span class="p">(</span><span class="n">capitalizeName</span><span class="p">(</span><span class="s">"mindol"</span><span class="p">));</span>
<span class="p">}</span>
<span class="c1">// 결과</span>
<span class="n">NULL</span>
<span class="n">MINDOL</span>
<span class="n">Exited</span>
</code></pre></div></div>

<p>좌항 ?? 우항</p>

<p>좌항이 null이면 우항을 반환, 좌항이 null이 아니면 좌항을 반환</p>

<p>변수명 ??= 값 : 만약 변수가 null이면 값을 적용</p>

<div class="language-dart highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kt">void</span> <span class="nf">main</span><span class="p">()</span> <span class="p">{</span>
  <span class="kt">String</span><span class="o">?</span> <span class="n">name</span><span class="p">;</span>
  <span class="n">name</span> <span class="o">??=</span> <span class="s">'mindol'</span><span class="p">;</span>
  <span class="n">name</span> <span class="o">??=</span> <span class="s">'Seok'</span><span class="p">;</span>
  <span class="n">print</span><span class="p">(</span><span class="n">name</span><span class="p">);</span>
<span class="p">}</span>
<span class="c1">// 결과</span>
<span class="o">:</span> <span class="nl">Warning:</span> <span class="n">Operand</span> <span class="n">of</span> <span class="kc">null</span><span class="o">-</span><span class="n">aware</span> <span class="n">operation</span> <span class="s">'??='</span> <span class="n">has</span> <span class="n">type</span> <span class="s">'String'</span> <span class="n">which</span> <span class="n">excludes</span> <span class="kc">null</span><span class="p">.</span>
<span class="n">main</span><span class="o">.</span><span class="na">dart</span><span class="o">:</span><span class="mi">4</span>
  <span class="n">name</span> <span class="o">??=</span> <span class="s">'Seok'</span><span class="p">;</span>

  <span class="o">^</span>
<span class="n">mindol</span>
<span class="n">Exited</span>
</code></pre></div></div>

<p>위의 경고는 3번째 줄 이후부터는 null일리 없다 라는 경고</p>]]></content><author><name>Mindol</name></author><category term="Dart" /><category term="Dart" /><summary type="html"><![CDATA[TMI Flutter를 공부하기 위한 Dart 공부]]></summary></entry><entry><title type="html">Dart 기초 - 변수</title><link href="http://localhost:4000/dart/2023/01/07/Dart-%EA%B8%B0%EC%B4%88-%EB%B3%80%EC%88%98.html" rel="alternate" type="text/html" title="Dart 기초 - 변수" /><published>2023-01-07T06:00:01+09:00</published><updated>2023-01-07T06:00:01+09:00</updated><id>http://localhost:4000/dart/2023/01/07/Dart%20%EA%B8%B0%EC%B4%88-%EB%B3%80%EC%88%98</id><content type="html" xml:base="http://localhost:4000/dart/2023/01/07/Dart-%EA%B8%B0%EC%B4%88-%EB%B3%80%EC%88%98.html"><![CDATA[<h1 id="tmi">TMI</h1>
<hr />
<p>Flutter를 공부하기 위한 Dart 공부</p>

<h1 id="변수">변수</h1>
<hr />
<p>변수</p>

<p>var 변수명 = 값;                      값에 맞는 자료형에 맞게 셋팅</p>

<p>자료형 변수명 = 값;                자료형에 맞는 값을 넣어야함</p>

<p>dynamic 변수명;, var 변수명;  여러 타입을 가질 수 있는 변수 선언 추천하지 않지만 가끔 사용 됨</p>

<div class="language-dart highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kt">void</span> <span class="nf">main</span><span class="p">(){</span>
	<span class="kd">dynamic</span> <span class="n">name</span><span class="p">;</span>
	<span class="n">name</span> <span class="o">=</span> <span class="s">'민돌'</span><span class="p">;</span>
  <span class="k">if</span> <span class="p">(</span><span class="n">name</span> <span class="k">is</span> <span class="kt">String</span><span class="p">)</span>
	<span class="p">{</span>
		<span class="n">name</span><span class="o">.</span><span class="na">isNotEmpty</span><span class="p">;</span>
	<span class="p">}</span>
<span class="p">}</span>
<span class="c1">// dynamic을 사용할 때에는 타입을 검사하고 사용하는 것을 습관화 하기</span>
</code></pre></div></div>

<p>var : 관습적으로 함수나 메소드 내부에서 지역 변수를 선언할 때에 사용 값을 수정해도 타입은 유지되야함</p>

<p>자료형 지정 : class에서 변수나 property를 선언할 때 타입 지정</p>

<p>null safety : 개발자가 null 값을 참조할 수 없도록 하는 것</p>

<p>일반적으로,   자료형 변수 = null; 은 불가능한 문법이지만</p>

<p>자료형? 변수;                           변수에 자료형에 맞는 값과 null이 들어갈 수 있게 함</p>

<div class="language-dart highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kt">void</span> <span class="nf">main</span><span class="p">(){</span>
	<span class="kt">String</span><span class="o">?</span> <span class="n">name</span> <span class="o">=</span> <span class="s">'민돌'</span><span class="p">;</span>
	<span class="n">name</span> <span class="o">=</span> <span class="kc">null</span><span class="p">;</span>
  <span class="k">if</span> <span class="p">(</span><span class="n">name</span> <span class="o">!=</span> <span class="kc">null</span><span class="p">)</span>
	<span class="p">{</span>
		<span class="n">name</span><span class="o">.</span><span class="na">isNotEmpty</span><span class="p">;</span>
	<span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>

<p>는</p>

<div class="language-dart highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kt">void</span> <span class="nf">main</span><span class="p">(){</span>
	<span class="kt">String</span><span class="o">?</span> <span class="n">name</span> <span class="o">=</span> <span class="s">'민돌'</span><span class="p">;</span>
	<span class="n">name</span> <span class="o">=</span> <span class="kc">null</span><span class="p">;</span>
  <span class="n">name</span><span class="o">?.</span><span class="na">isNotEmpty</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>

<p>로 줄여 쓸수 있다</p>

<p>final 키워드 : 변수를 상수로 만들어줌</p>

<p>final name = ‘민돌’;</p>

<p>final String name = ‘민돌’;</p>

<p>name 변수는 수정 불가능</p>

<div class="language-dart highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kt">void</span> <span class="nf">main</span><span class="p">(){</span>
	<span class="kd">late</span> <span class="kd">final</span> <span class="kt">String</span> <span class="n">name</span><span class="p">;</span>
	<span class="n">name</span> <span class="o">=</span> <span class="s">'민돌'</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>

<p>late는 변수를 먼저 만든 후 데이터를 나중에 한번만 넣을 수 있게 함 (수정 불가, 값을 넣기전에 접근 불가능)</p>

<p>const : compile-time constant</p>

<p>컴파일 전에 값을 알고 있는 변수를 만드는 법 특정 값을 알고 있을 때 (#define 같음 잘모르겠음)</p>

<p>list 선언법</p>

<div class="language-dart highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">var</span> <span class="n">num_list</span> <span class="o">=</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="mi">5</span><span class="p">];</span>
<span class="c1">// 여러 자료형이 들어갈 수 있음</span>
<span class="kt">List</span><span class="p">&lt;</span><span class="kt">int</span><span class="p">&gt;</span> <span class="n">num_list</span> <span class="o">=</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="mi">5</span><span class="p">];</span>
<span class="c1">// 정수만 들어갈 수 있음</span>
<span class="c1">// list에 요소 추가 : 리스트명.add(값);</span>
</code></pre></div></div>

<p>list의 마지막 요소 가져오기 : 리스트명.last</p>

<p>visual code에서 리스트의 요소를 ,로 끝내면 저절로 여러줄로 포매팅</p>

<div class="language-dart highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kt">List</span><span class="p">&lt;</span><span class="kt">int</span><span class="p">&gt;</span> <span class="n">num_list</span> <span class="o">=</span> <span class="p">[</span>
<span class="mi">1</span><span class="p">,</span>
<span class="mi">2</span><span class="p">,</span>
<span class="mi">3</span><span class="p">,</span>
<span class="mi">4</span><span class="p">,</span>
<span class="mi">5</span><span class="p">,</span>
<span class="p">];</span>
</code></pre></div></div>

<p>list의 collecting if 기능 (만약 로그인 했을때 추가해야할 경우 등 유용)</p>

<div class="language-dart highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kt">List</span><span class="p">&lt;</span><span class="kt">int</span><span class="p">&gt;</span> <span class="n">num_list</span> <span class="o">=</span> <span class="p">[</span>
<span class="mi">1</span><span class="p">,</span>
<span class="mi">2</span><span class="p">,</span>
<span class="mi">3</span><span class="p">,</span>
<span class="mi">4</span><span class="p">,</span>
<span class="k">if</span><span class="p">(</span><span class="kc">true</span><span class="p">)</span> <span class="mi">5</span><span class="p">,</span>                       <span class="c1">// 만약 조건문이 참이면 5를 추가</span>
<span class="p">];</span>

<span class="k">if</span><span class="p">(</span><span class="kc">true</span><span class="p">)</span>
<span class="p">{</span>
	<span class="n">num_list</span><span class="o">.</span><span class="na">add</span><span class="p">(</span><span class="mi">5</span><span class="p">)</span>               <span class="c1">// 위와 같은 역할</span>
<span class="p">}</span>
</code></pre></div></div>

<p>list의 collecting for 기능</p>

<div class="language-dart highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kt">List</span><span class="p">&lt;</span><span class="kt">int</span><span class="p">&gt;</span> <span class="n">num2_list</span> <span class="o">=</span> <span class="p">[</span><span class="mi">7</span><span class="p">,</span><span class="mi">8</span><span class="p">,</span><span class="mi">9</span><span class="p">];</span>
<span class="kt">List</span><span class="p">&lt;</span><span class="kt">int</span><span class="p">&gt;</span> <span class="n">num_list</span> <span class="o">=</span> <span class="p">[</span>
<span class="mi">1</span><span class="p">,</span>
<span class="mi">2</span><span class="p">,</span>
<span class="mi">3</span><span class="p">,</span>
<span class="mi">4</span><span class="p">,</span>
<span class="k">for</span> <span class="p">(</span><span class="kd">var</span> <span class="n">i</span> <span class="k">in</span> <span class="n">num2_list</span><span class="p">)</span> <span class="n">$i</span>                       <span class="c1">// 요소 i를 추가</span>
<span class="p">];</span>

<span class="k">if</span><span class="p">(</span><span class="kc">true</span><span class="p">)</span>
<span class="p">{</span>
	<span class="n">num_list</span><span class="o">.</span><span class="na">add</span><span class="p">(</span><span class="mi">5</span><span class="p">)</span>               <span class="c1">// 위와 같은 역할</span>
<span class="p">}</span>
</code></pre></div></div>

<p>문자열에 변수 넣기</p>

<div class="language-dart highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">var</span> <span class="n">name</span> <span class="o">=</span> <span class="s">'민돌'</span><span class="p">;</span>
<span class="kd">var</span> <span class="n">age</span> <span class="o">=</span> <span class="mi">20</span><span class="p">;</span>
<span class="kd">var</span> <span class="n">hi</span> <span class="o">=</span> <span class="s">"hi my name is </span><span class="si">$name</span><span class="s">, nice to meet you and I'm </span><span class="si">${age+15}</span><span class="s">"</span><span class="p">;</span>
<span class="c1">// 일반 변수 출력시 $변수 계산 후 출력시 ${계산}</span>
<span class="n">print</span><span class="p">(</span><span class="n">hi</span><span class="p">);</span>
</code></pre></div></div>

<p>map : dictionary와 같음 (Map&lt;key, value&gt;)</p>

<div class="language-dart highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">var</span> <span class="n">dic</span> <span class="o">=</span> <span class="p">{</span>
	<span class="s">'name'</span> <span class="o">:</span> <span class="s">'민돌'</span><span class="p">,</span>
	<span class="s">'age'</span> <span class="o">:</span> <span class="mi">25</span><span class="p">,</span>
	<span class="s">'marry'</span> <span class="o">:</span> <span class="kc">false</span>
<span class="p">};</span>

<span class="kt">Map</span><span class="p">&lt;</span><span class="kt">String</span><span class="p">,</span> <span class="kt">Object</span><span class="p">&gt;</span> <span class="n">dic</span> <span class="o">=</span> <span class="p">{</span>
	<span class="s">'name'</span> <span class="o">:</span> <span class="s">'민돌'</span><span class="p">,</span>
	<span class="s">'age'</span> <span class="o">:</span> <span class="mi">25</span><span class="p">,</span>
	<span class="s">'marry'</span> <span class="o">:</span> <span class="kc">false</span>
<span class="p">}</span>

<span class="n">print</span><span class="p">(</span><span class="n">dic</span><span class="p">[</span><span class="s">'name'</span><span class="p">]);</span>

</code></pre></div></div>

<p>Set : python의 튜플과 같음</p>

<div class="language-dart highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kt">Set</span><span class="p">&lt;</span><span class="kt">int</span><span class="p">&gt;</span> <span class="n">nums</span> <span class="o">=</span> <span class="p">{</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="mi">5</span><span class="p">};</span>
<span class="c1">// Set은 List와 유사하지만 요소들이 고유함 (하나씩만 존재함)</span>
<span class="n">nums</span><span class="o">.</span><span class="na">add</span><span class="p">(</span><span class="mi">1</span><span class="p">);</span>
<span class="n">print</span><span class="p">(</span><span class="n">nums</span><span class="p">);</span>
<span class="c1">// 출력결과는 1,2,3,4,5</span>
</code></pre></div></div>

<p>요소가 하나만 있을때는 Set을 사용하고 중복이 가능하면 List 사용</p>

<p>리스트 반전</p>

<div class="language-dart highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kt">void</span> <span class="nf">main</span><span class="p">()</span> <span class="p">{</span>
  <span class="kt">List</span><span class="p">&lt;</span><span class="kt">int</span><span class="p">&gt;</span> <span class="n">list</span> <span class="o">=</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">5</span><span class="p">];</span>
  <span class="kt">List</span><span class="p">&lt;</span><span class="kt">int</span><span class="p">&gt;</span> <span class="n">list_R</span> <span class="o">=</span> <span class="n">list</span><span class="o">.</span><span class="na">reversed</span><span class="o">.</span><span class="na">toList</span><span class="p">();</span>      
<span class="c1">// reversed를 사용하면 자료형이 List가 아닌 Iterable이 되어 List형식으로 변환해줘야함</span>
  <span class="n">print</span><span class="p">(</span><span class="n">list</span><span class="p">);</span>
  <span class="n">print</span><span class="p">(</span><span class="n">list_R</span><span class="p">);</span>
<span class="p">}</span>
</code></pre></div></div>

<p>typedef : 변수에 alias를 지정 (별명 지정)</p>

<div class="language-dart highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">typedef</span> <span class="n">JungSoo</span> <span class="o">=</span> <span class="kt">int</span><span class="p">;</span>
<span class="kd">typedef</span> <span class="n">UserInfo</span> <span class="o">=</span> <span class="kt">Map</span><span class="p">&lt;</span><span class="kt">String</span><span class="p">,</span> <span class="kt">String</span><span class="p">&gt;;</span>
<span class="kt">void</span> <span class="nf">main</span><span class="p">()</span> <span class="p">{</span>
  <span class="n">JungSoo</span> <span class="n">n</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>
  <span class="n">print</span><span class="p">(</span><span class="n">n</span><span class="p">);</span>
<span class="p">}</span>
</code></pre></div></div>]]></content><author><name>Mindol</name></author><category term="Dart" /><category term="Dart" /><summary type="html"><![CDATA[TMI Flutter를 공부하기 위한 Dart 공부]]></summary></entry><entry><title type="html">jekyll 블로그 만들기</title><link href="http://localhost:4000/web/2022/12/30/jekyll%EC%9D%84-%EC%9D%B4%EC%9A%A9%ED%95%9C-%EB%B8%94%EB%A1%9C%EA%B7%B8-%EB%A7%8C%EB%93%A4%EA%B8%B0.html" rel="alternate" type="text/html" title="jekyll 블로그 만들기" /><published>2022-12-30T06:00:01+09:00</published><updated>2022-12-30T06:00:01+09:00</updated><id>http://localhost:4000/web/2022/12/30/jekyll%EC%9D%84%20%EC%9D%B4%EC%9A%A9%ED%95%9C%20%EB%B8%94%EB%A1%9C%EA%B7%B8%20%EB%A7%8C%EB%93%A4%EA%B8%B0</id><content type="html" xml:base="http://localhost:4000/web/2022/12/30/jekyll%EC%9D%84-%EC%9D%B4%EC%9A%A9%ED%95%9C-%EB%B8%94%EB%A1%9C%EA%B7%B8-%EB%A7%8C%EB%93%A4%EA%B8%B0.html"><![CDATA[<h2 id="ruby-설치">ruby 설치</h2>
<hr />
<p><img src="/assets/img/jekyll/ruby_home.png" alt="image" width="100%" height="100%" /><br />
<a href="https://rubyinstaller.org/downloads//">ruby</a>에 접속합니다.</p>

<p><img src="/assets/img/jekyll/ruby_down.png" alt="image" width="100%" height="100%" /><br />
Devkit의 2.4이상의 버전을 다운 받아 설치해줍니다.<br /></p>

<p><img src="/assets/img/jekyll/ruby_install_1.png" alt="image" width="100%" height="100%" /><br />
Enter를 입력하여 설치.<br /><br />
cmd에</p>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>ruby <span class="nt">-v</span>
</code></pre></div></div>
<p>입력하여 설치가 완료되었는지 확인해줍니다.<br /></p>

<h2 id="jekyll-설치">jekyll 설치</h2>
<hr />
<p><img src="/assets/img/jekyll/jekyll_install.jpg" alt="image" width="100%" height="100%" /><br />
cmd에</p>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>gem <span class="nb">install </span>bundle jekyll
</code></pre></div></div>
<p>입력하여 jekyll을 설치해줍니다.<br /></p>

<h2 id="jekyll-theme-설치">jekyll theme 설치</h2>
<hr />
<p><img src="/assets/img/jekyll/jekyll_theme_1.png" alt="image" width="100%" height="100%" /><br />
<a href="http://jekyllthemes.org/">링크</a>에 접속하여 테마를 선텍합니다.<br /></p>

<p><img src="/assets/img/jekyll/jekyll_theme_2.png" alt="image" width="100%" height="100%" /><br />
현재 이 블로그는 <a href="http://jekyllthemes.org/themes/hamilton/">Hamilton</a> 테마를 사용하고 있습니다.<br />
Download 버튼을 눌러 테마를 다운로드 해줍니다.<br /></p>

<p>cmd에</p>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>bundle <span class="nb">install</span>
</code></pre></div></div>
<p>를 입력하여 bundle 설치 후<br />
cmd로 다운받은 디렉토리에 접속하여</p>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>bundle <span class="nb">exec </span>jekyll serve
</code></pre></div></div>
<p>를 입력하여 줍니다.<br /></p>

<h2 id="깃허브-repository-생성">깃허브 repository 생성</h2>
<hr />
<p><img src="/assets/img/jekyll/localhost.png" alt="image" width="100%" height="100%" /><br />
주소창에 localhost:4000을 입력하여 블로그에 접속해 테마를 확인해줍니다.<br /></p>

<p><img src="/assets/img/jekyll/repository.png" alt="image" width="100%" height="100%" /><br />
깃허브 레포지토리를 생성해줍니다.<br />
레포지토리 이름은 반드시<br />
📚 계정이름.github.io 으로 해줍니다.<br />
레포지토리와 테마 디렉터리를 연결 후 푸쉬후<br /></p>

<p><img src="/assets/img/jekyll/blog_check.png" alt="image" width="100%" height="100%" /><br />
주소창에 계정이름.github.io를 입력하여 블로그에 접속하여 줍니다.<br /></p>]]></content><author><name>Mindol</name></author><category term="web" /><category term="jekyll" /><category term="web" /><category term="ruby" /><category term="github" /><summary type="html"><![CDATA[ruby 설치 ruby에 접속합니다.]]></summary></entry><entry><title type="html">Tiler</title><link href="http://localhost:4000/unity/2021/02/10/Tiler.html" rel="alternate" type="text/html" title="Tiler" /><published>2021-02-10T06:00:05+09:00</published><updated>2021-02-10T06:00:05+09:00</updated><id>http://localhost:4000/unity/2021/02/10/Tiler</id><content type="html" xml:base="http://localhost:4000/unity/2021/02/10/Tiler.html"><![CDATA[<h1 id="tmi">TMI</h1>
<hr />
<p>2020년 군 전역 후 친구들과 만든 멀티 게임</p>

<h1 id="설치파일">설치파일</h1>
<hr />
<ul>
  <li>클라이언트 다운로드 : <a href="https://github.com/DailyGreen/Tiler-Client/releases/tag/v1.0.0">링크</a><br /></li>
  <li>서버 다운로드 : <a href="https://github.com/DailyGreen/Tiler-Server/releases/tag/v1.0.0">링크</a></li>
</ul>

<h1 id="인게임">인게임</h1>
<hr />
<h2 id="로그인-화면">로그인 화면</h2>
<p><img src="/assets/img/Tiler/Lobby.png" alt="image" width="100%" height="100%" /><br />
서버를 연 컴퓨터의 아이피와 닉네임을 입력합니다.<br /></p>

<h2 id="로비-화면">로비 화면</h2>
<p><img src="/assets/img/Tiler/Menu.png" alt="image" width="100%" height="100%" /><br />
게임 시작 버튼과 게임 설정버튼이 존재합니다.<br /></p>

<p><img src="/assets/img/Tiler/Menu_setting.png" alt="image" width="100%" height="100%" /><br />
설정 버튼을 눌러 게임 볼륨과 효과음을 조절할 수 있습니다.<br /></p>

<p><img src="/assets/img/Tiler/Menu_play.png" alt="image" width="100%" height="100%" /><br />
게임 시작 버튼을 눌러 방을 생성하거나 만들어진 방에 들어갈 수 있습니다.<br /></p>

<h2 id="방-입장">방 입장</h2>
<p><img src="/assets/img/Tiler/Game_Lobby.png" alt="image" width="100%" height="100%" /><br />
방에서 플레이어의 종족, 색상을 변경할 수 있습니다.<br /></p>

<h2 id="종족">종족</h2>
<p><img src="/assets/img/Tiler/Game_Lobby_Tribe.png" alt="image" width="100%" height="100%" /><br />
종족은 3가지 종족이 존재하며, 숲, 바다, 마을종족이 있습니다.<br /></p>

<h2 id="색상-변경">색상 변경</h2>
<p><img src="/assets/img/Tiler/Game_Lobby_Color.png" alt="image" width="100%" height="100%" /><br />
자신의 종족을 구별할 수 있는 원하는 색상을 선택할 수 있습니다.<br /></p>

<p><img src="/assets/img/Tiler/Game_Lobby_User.png" alt="image" width="100%" height="100%" /><br />
최소 2명에서 최대 6명까지 플레이할 수 있습니다.</p>

<h2 id="게임-화면">게임 화면</h2>
<p><img src="/assets/img/Tiler/Ingame_0.png" alt="image" width="100%" height="100%" /><br />
게임이 시작되면 자신 차례에 행동을 할 수 있습니다.</p>

<p><img src="/assets/img/Tiler/Ingame_1.png" alt="image" width="100%" height="100%" /><br />
게임을 시작하면 성에서 일꾼을 생성할 수 있습니다.</p>

<p><img src="/assets/img/Tiler/Ingame_2.png" alt="image" width="100%" height="100%" /><br />
일꾼은 재화를 생성하기위한 광산과 농장 그리고 강력한 병력을 생성할 수 있는 군사기지와<br />
자신의 영역을 지켜줄 수 있는 터렛을 제작할 수 있습니다.</p>

<p><img src="/assets/img/Tiler/Ingame_3.png" alt="image" width="100%" height="100%" /><br />
플레이어가 한턴에 가능한 행동은 최대 2번입니다<br />
또한 우측 하단에 자신의 차례를 건너뛰는 skip버튼이 존재합니다.</p>

<p><img src="/assets/img/Tiler/Ingame_4.png" alt="image" width="100%" height="100%" /><br />
군사기지에서는 일꾼보다 강력한 유닛들을 생성할 수 있습니다.</p>

<p><img src="/assets/img/Tiler/Ingame_5.png" alt="image" width="100%" height="100%" /><br />
마법사는 최대 두칸 이동이 가능합니다.</p>

<p><img src="/assets/img/Tiler/Ingame_6.png" alt="image" width="100%" height="100%" /><br />
일정확률로 턴이 시작될때 보급품이 떨어지게 됩니다.</p>

<p><img src="/assets/img/Tiler/Ingame_7.png" alt="image" width="100%" height="100%" /><br />
보급품을 획득하는 방법은 유닛이 보급품을 공격하면 됩니다.</p>

<p><img src="/assets/img/Tiler/Ingame_8.png" alt="image" width="100%" height="100%" /><br />
보급품 획득 시 식량과 광물중 하나의 재화가 랜덤하게 지급됩니다.</p>

<p><img src="/assets/img/Tiler/Ingame_9.png" alt="image" width="100%" height="100%" /><br />
적의 영역을 발견한 후 침략을 시작할 수 있습니다.</p>

<p><img src="/assets/img/Tiler/Ingame_10.png" alt="image" width="100%" height="100%" /><br />
건물들을 부수고</p>

<p><img src="/assets/img/Tiler/Ingame_11.png" alt="image" width="100%" height="100%" /><br />
적 유닛을 제거하며</p>

<p><img src="/assets/img/Tiler/Ingame_12.png" alt="image" width="100%" height="100%" /><br />
성을 공격하고 성의 체력이 바닥나면</p>

<p><img src="/assets/img/Tiler/Ingame_13.png" alt="image" width="100%" height="100%" /><br />
마지막까지 살아남은 플레이어가 우승합니다.</p>]]></content><author><name>Mindol</name></author><category term="Unity" /><category term="Unity" /><summary type="html"><![CDATA[TMI 2020년 군 전역 후 친구들과 만든 멀티 게임]]></summary></entry><entry><title type="html">Crush Me</title><link href="http://localhost:4000/unity/2018/03/08/CrushMe.html" rel="alternate" type="text/html" title="Crush Me" /><published>2018-03-08T06:00:00+09:00</published><updated>2018-03-08T06:00:00+09:00</updated><id>http://localhost:4000/unity/2018/03/08/CrushMe</id><content type="html" xml:base="http://localhost:4000/unity/2018/03/08/CrushMe.html"><![CDATA[<h1 id="tmi">TMI</h1>
<hr />
<p>2017년에 제작하였지만 2022 K-Game개발 챌린지에 제출하기위해 리메이크 중</p>

<h1 id="설치파일">설치파일</h1>
<hr />
<ul>
  <li><a href="/assets/download/CrushMe.apk"> apk</a><br /></li>
  <li><a href="/assets/download/CrushMe.zip"> zip</a></li>
</ul>

<h1 id="인게임">인게임</h1>
<hr />
<h2 id="메뉴-화면">메뉴 화면</h2>
<p><img src="/assets/img/CrushMe/main.jpg" alt="image" width="50%" height="50%" /><br />
시작버튼을 누르면 게임이 시작됩니다.<br /></p>

<p><img src="/assets/img/CrushMe/setup.jpg" alt="image" width="50%" height="50%" /><br />
화면 우하단 설정 버튼을 눌러 조이스틱의 위치를 바꿀 수 있습니다.</p>

<h2 id="게임-화면">게임 화면</h2>
<p><img src="/assets/img/CrushMe/skill.jpg" alt="image" width="50%" height="50%" /><br />
조이스틱을 움직여 스킬을 최대 두개를 얻을 수 있습니다.</p>

<p><img src="/assets/img/CrushMe/ingame.jpg" alt="image" width="50%" height="50%" /><br />
플레이어를 움직여 최고기록을 갱신해 보세요.</p>

<p><img src="/assets/img/CrushMe/result.jpg" alt="image" width="50%" height="50%" /><br />
플레이어 사망 시 현재기록과 최고기록이 나옵니다.</p>]]></content><author><name>Mindol</name></author><category term="Unity" /><category term="Unity" /><summary type="html"><![CDATA[TMI 2017년에 제작하였지만 2022 K-Game개발 챌린지에 제출하기위해 리메이크 중]]></summary></entry><entry><title type="html">Pipe In The Hole</title><link href="http://localhost:4000/unity/2017/12/26/PipeInTheHole.html" rel="alternate" type="text/html" title="Pipe In The Hole" /><published>2017-12-26T06:00:01+09:00</published><updated>2017-12-26T06:00:01+09:00</updated><id>http://localhost:4000/unity/2017/12/26/PipeInTheHole</id><content type="html" xml:base="http://localhost:4000/unity/2017/12/26/PipeInTheHole.html"><![CDATA[<h1 id="tmi">TMI</h1>
<hr />
<p>2016년 겨울방학 팀 프로젝트 시간에 제작한 게임</p>

<h1 id="설치파일">설치파일</h1>
<hr />
<ul>
  <li><a href="/assets/download/PipeInTheHole.apk"> apk</a><br /></li>
  <li><a href="/assets/download/PipeInTheHole.zip"> zip</a></li>
</ul>

<h1 id="인게임">인게임</h1>
<hr />
<h2 id="인트로">인트로</h2>
<p><img src="/assets/img/PipeInTheHole/Intro.jpg" alt="image" width="50%" height="50%" /><br />
이야기가 있는 게임입니다 뒷내용이 궁금하시면 클리어 하시면 알 수 있습니다.<br /></p>

<h2 id="메뉴-화면">메뉴 화면</h2>
<p><img src="/assets/img/PipeInTheHole/Menu.jpg" alt="image" width="50%" height="50%" /><br />
가운데 물방울을 클릭 시 게임이 시작됩니다.</p>

<h2 id="게임-화면">게임 화면</h2>
<p><img src="/assets/img/PipeInTheHole/GamePlay.jpg" alt="image" width="50%" height="50%" /><br />
아래로 떨어지는 오브젝트를 제시되는 틀에 맞춰 화면을 드래그해 돌려줍니다.</p>

<p><img src="/assets/img/PipeInTheHole/Clear.jpg" alt="image" width="50%" height="50%" /><br />
성공 화면</p>

<p><img src="/assets/img/PipeInTheHole/Fail.jpg" alt="image" width="50%" height="50%" /><br />
실패 화면</p>

<p><img src="/assets/img/PipeInTheHole/Result.jpg" alt="image" width="50%" height="50%" /><br />
최종 점수는 오브젝트를 회전한 횟수와 통과 횟수를 더한 값입니다.</p>]]></content><author><name>Mindol</name></author><category term="Unity" /><category term="Unity" /><summary type="html"><![CDATA[TMI 2016년 겨울방학 팀 프로젝트 시간에 제작한 게임]]></summary></entry><entry><title type="html">Get Out Of My Bank</title><link href="http://localhost:4000/unity/2017/10/06/GetOutOfMyBank.html" rel="alternate" type="text/html" title="Get Out Of My Bank" /><published>2017-10-06T06:00:00+09:00</published><updated>2017-10-06T06:00:00+09:00</updated><id>http://localhost:4000/unity/2017/10/06/GetOutOfMyBank</id><content type="html" xml:base="http://localhost:4000/unity/2017/10/06/GetOutOfMyBank.html"><![CDATA[<h1 id="tmi">TMI</h1>
<hr />
<p>2017년 게임과학고등학교 스마트폰게임 개발 체험 행사에 참가하여 제작한 게임</p>

<h1 id="설치파일">설치파일</h1>
<hr />
<ul>
  <li><a href="/assets/download/GetOutOfMyBank.apk"> apk</a><br /></li>
  <li><a href="/assets/download/GetOutOfMyBank.zip"> zip</a></li>
</ul>

<h1 id="인게임">인게임</h1>
<hr />
<h2 id="메뉴-화면">메뉴 화면</h2>
<p><img src="/assets/img/GetOutOfMyBank/Menu.jpg" alt="image" width="50%" height="50%" /><br />
가운데 도둑을 클릭시 게임이 시작됩니다.</p>

<h2 id="게임-화면">게임 화면</h2>
<p><img src="/assets/img/GetOutOfMyBank/Ingame.jpg" alt="image" width="50%" height="50%" /><br />
각 플레이어에게 3개의 돈주머니가 주어집니다, 도둑은 정해진 길로 타원을 그리며 이동합니다.</p>

<p><img src="/assets/img/GetOutOfMyBank/Jump.jpg" alt="image" width="50%" height="50%" /><br />
도둑이 은행 옆 점프대에 올라왔을때 화면 터치 시<br />
도둑이 점프를 합니다, 만약 점프를 못할 시 가지고있는 돈주머니 한개를 빼앗깁니다.<br /></p>

<p><img src="/assets/img/GetOutOfMyBank/GameOver.jpg" alt="image" width="50%" height="50%" /><br />
가지고 있는 3개의 돈주머니를 모두 빼앗기면<br />
파산 문구가 뜨며 게임이 끝납니다.</p>]]></content><author><name>Mindol</name></author><category term="Unity" /><category term="Unity" /><summary type="html"><![CDATA[TMI 2017년 게임과학고등학교 스마트폰게임 개발 체험 행사에 참가하여 제작한 게임]]></summary></entry><entry><title type="html">Smoking On The Street</title><link href="http://localhost:4000/unity/2017/09/21/SmokingOnTheStreet.html" rel="alternate" type="text/html" title="Smoking On The Street" /><published>2017-09-21T06:00:01+09:00</published><updated>2017-09-21T06:00:01+09:00</updated><id>http://localhost:4000/unity/2017/09/21/SmokingOnTheStreet</id><content type="html" xml:base="http://localhost:4000/unity/2017/09/21/SmokingOnTheStreet.html"><![CDATA[<h1 id="tmi">TMI</h1>
<hr />
<p>2017년 기능성 게임 개발 대회에 참가하기 위해 제작한 기능성 게임<br />
담배를 소재로 하였음</p>

<h1 id="설치파일">설치파일</h1>
<hr />
<ul>
  <li><a href="/assets/download/SmokingOnTheStreet.apk"> apk</a><br /></li>
  <li><a href="/assets/download/SmokingOnTheStreet.zip"> zip</a></li>
</ul>

<h1 id="인게임">인게임</h1>
<hr />
<h2 id="메뉴-화면">메뉴 화면</h2>
<p><img src="/assets/img/SmokingOnTheStreet/Menu.jpg" alt="image" width="50%" height="50%" /><br />
플레이 버튼을 클릭 시 게임이 시작됩니다.</p>

<h2 id="게임화면">게임화면</h2>
<p><img src="/assets/img/SmokingOnTheStreet/Ciga.jpg" alt="image" width="50%" height="50%" /><br />
게임을 시작하면 주인공이 피는 담배가 나옵니다.</p>

<p><img src="/assets/img/SmokingOnTheStreet/NPC.jpg" alt="image" width="50%" height="50%" /><br />
거리를 걸어가는 주인공의 사망지수를 파란색 노드를 터치하여 낮춥니다<br />
가끔 나오는 주민들이 주인공의 담배 냄새에 불쾌함을 느낍니다.</p>

<p><img src="/assets/img/SmokingOnTheStreet/Store.jpg" alt="image" width="50%" height="50%" /><br />
편의점을 발견한 주인공은 새로운 담배를 사기위해 편의점으로 들어갑니다.</p>

<p><img src="/assets/img/SmokingOnTheStreet/StoreCiga.jpg" alt="image" width="50%" height="50%" /><br />
새로운 담배를 사고 나오는 주인공, 사망 지수의 속도가 증가합니다.</p>

<p><img src="/assets/img/SmokingOnTheStreet/Result.jpg" alt="image" width="50%" height="50%" /><br />
사망 지수가 가득차 사망한 주인공, 사망한 이유와 살아있던 시간, 역대 시간이 나옵니다.</p>]]></content><author><name>Mindol</name></author><category term="Unity" /><category term="Unity" /><summary type="html"><![CDATA[TMI 2017년 기능성 게임 개발 대회에 참가하기 위해 제작한 기능성 게임 담배를 소재로 하였음]]></summary></entry><entry><title type="html">Save Earth</title><link href="http://localhost:4000/unity/2017/07/31/SaveEarth.html" rel="alternate" type="text/html" title="Save Earth" /><published>2017-07-31T06:00:01+09:00</published><updated>2017-07-31T06:00:01+09:00</updated><id>http://localhost:4000/unity/2017/07/31/SaveEarth</id><content type="html" xml:base="http://localhost:4000/unity/2017/07/31/SaveEarth.html"><![CDATA[<h1 id="tmi">TMI</h1>
<hr />
<p>프로그래밍을 배우고 처음으로 제작한 게임</p>

<h1 id="설치파일">설치파일</h1>
<ul>
  <li><a href="/assets/download/SaveEarth.apk"> apk</a><br /></li>
  <li><a href="/assets/download/SaveEarth.zip"> zip</a></li>
</ul>

<h1 id="인게임">인게임</h1>
<hr />
<p><img src="/assets/img/SaveEarth/Logo.jpg" alt="image" width="50%" height="50%" /><br />
팀 이름 ‘병아리반 피즈’를 상징하는 로고.<br /></p>

<h2 id="메뉴-화면">메뉴 화면</h2>
<p><img src="/assets/img/SaveEarth/MenuScene.jpg" alt="image" width="50%" height="50%" /><br />
가운데 로켓을 클릭시 게임이 시작됩니다.<br /></p>

<h2 id="게임-화면">게임 화면</h2>
<p><img src="/assets/img/SaveEarth/GameScene.jpg" alt="image" width="50%" height="50%" /><br />
로켓의 각도를 맞춘 후 화면을 터치하면 로켓이 발사됩니다.</p>

<p><img src="/assets/img/SaveEarth/kind.jpg" alt="image" width="50%" height="50%" /><br />
지구 가운데 화살표는 발사 로켓의 종류를 나타냅니다.<br />
현재 로켓은 벽에 튕길 수 있는 로켓입니다.<br /></p>

<p><img src="/assets/img/SaveEarth/result.jpg" alt="image" width="50%" height="50%" /><br />
게임이 종료되면 얻은 점수와 실패 횟수가 나타납니다.</p>]]></content><author><name>Mindol</name></author><category term="Unity" /><category term="Unity" /><summary type="html"><![CDATA[TMI 프로그래밍을 배우고 처음으로 제작한 게임]]></summary></entry></feed>